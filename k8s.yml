apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongo
  name: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - image: mongo
          name: mongo
          volumeMounts:
            - mountPath: /data/db
              name: mongo-data
      volumes:
        - name: mongo-data
          persistentVolumeClaim:
            claimName: mongo-data-claim
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: mongo
  name: mongo
spec:
  ports:
    - port: 27017
      protocol: TCP
      targetPort: 27017
  selector:
    app: mongo
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolume
metadata:
  labels:
    app: mongo
  name: mongo-data
spec:
  accessModes:
    - ReadWriteOnce
  capacity: 
    storage: 100Mi
  hostPath:
    path: .data
    type: Directory
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: mongo
  name: mongo-data-claim
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 100Mi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: redis
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - image: redis
          name: redis
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: redis
  name: redis
spec:
  ports:
    - port: 6379
      protocol: TCP
      targetPort: 6379
  selector:
    app: redis
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: cpc-scrapper
  name: cpc-scrapper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cpc-scrapper
  template:
    metadata:
      labels:
        app: cpc-scrapper
    spec:
      containers:
        - image: juanpablotyrlik/microservices-app-cpc-scrapper
          name: cpc-scrapper
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: redis-to-mongo
  name: redis-to-mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-to-mongo
  template:
    metadata:
      labels:
        app: redis-to-mongo
    spec:
      containers:
        - image: juanpablotyrlik/microservices-app-redis-to-mongo
          name: redis-to-mongo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: api
  name: api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
        - image: juanpablotyrlik/microservices-app-api
          name: api
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: api
  name: api
spec:
  ports:
    - port: 3000
      protocol: TCP
      targetPort: 3000
  selector:
    app: api
  type: NodePort